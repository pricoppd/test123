#!/bin/bash
APP=$1
ZONE=$2
PROJECT=$3
GOOGLE_APPLICATION_CREDENTIALS=$4
SET_IMAGE_TEST="yes"

gcloud config set project "${PROJECT}"
gcloud auth activate-service-account --key-file "${GOOGLE_APPLICATION_CREDENTIALS}"

# List all instance groups in the specified zone matching the pattern
echo "Listing matching instance groups in zone $ZONE for $APP:"
INSTANCE_GROUPS=$(gcloud compute instance-groups list --zones $ZONE --filter="name~gce-instance-group-managed-wdc-$APP+" --format="value(name)")
echo "$INSTANCE_GROUPS"

# Check if any instance groups matched
if [ -z "$INSTANCE_GROUPS" ]; then
  echo "No matching instance groups found."
  exit
fi

# Assuming you want the first instance group from the filtered list
INSTANCE_GROUP_NAME=$(echo "$INSTANCE_GROUPS" | head -n 1)

# Fetch all VMs in the selected instance group
INSTANCE_NAMES=$(gcloud compute instance-groups managed list-instances $INSTANCE_GROUP_NAME --zone=$ZONE --format="value(instance)")

# If no VMs are found, exit
if [ -z "$INSTANCE_NAMES" ]; then
  echo "No VMs found in the instance group."
  exit 1
fi

echo "VMs in the instance group:"
echo "$INSTANCE_NAMES"

if [[ $SET_IMAGE_TEST == "yes" ]]; then
  # Loop over each VM and update metadata
  while IFS= read -r INSTANCE_NAME; do
    gcloud compute instances add-metadata "$INSTANCE_NAME" --zone=$ZONE --metadata image_test=TRUE
    echo "Metadata updated for VM $INSTANCE_NAME with image_test set to 'TRUE'"
  done <<< "$INSTANCE_NAMES"
else
  echo "No metadata changes made."
fi
